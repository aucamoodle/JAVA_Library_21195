/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;

import Modele.Book;
import Remote.Controller;
import java.awt.print.PrinterException;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Date;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author <milly g@VNGTechnology>
 */
public final class Report extends javax.swing.JInternalFrame {

    /**
     * Creates new form Check
     */
    public Report() {
        initComponents();
        popCombo();
        populateTable();
    }
    DefaultTableModel dm=null;
void populateTable(){
    dm=(DefaultTableModel) jTable1.getModel();
List<Object[]> m=new Controller().allOps();
    for (Object[] objects : m) {
        dm.addRow(objects);
    }
}
DefaultComboBoxModel dmc=null;
public void popCombo(){
List<String> Category=new ArrayList<>();
dmc=(DefaultComboBoxModel) bookCombo.getModel();
Category.add("1");
Category.add("2");
    for (Iterator<String> iterator = Category.iterator(); iterator.hasNext();) {
        String next = iterator.next();
        dmc.addElement(next);
    }

}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        bookCombo = new javax.swing.JComboBox<>();
        From = new javax.swing.JLabel();
        To = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fromDate = new com.toedter.calendar.JDateChooser();
        Todate = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ExcelExport = new javax.swing.JButton();
        PDFExport = new javax.swing.JButton();
        Print = new javax.swing.JButton();
        Criteria = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jRadioButton1.setText("CheckIn");

        jRadioButton2.setText("CheckOut");

        From.setText("From");

        To.setText("To");

        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        jLabel1.setText("BookCategory");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(From)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(To)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Todate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(Search))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(bookCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(From)
                        .addComponent(To))
                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Todate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Search)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "clientid", "Booknum", "date"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        ExcelExport.setText("Excel");
        ExcelExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcelExportActionPerformed(evt);
            }
        });

        PDFExport.setText("PDF");
        PDFExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PDFExportActionPerformed(evt);
            }
        });

        Print.setText("Print");

        Criteria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "category", "date", " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(Criteria, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(ExcelExport)
                .addGap(18, 18, 18)
                .addComponent(PDFExport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Print)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(Criteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExcelExport)
                    .addComponent(PDFExport)
                    .addComponent(Print))
                .addGap(0, 53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExcelExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcelExportActionPerformed
        // TODO add your handling code here:
        dm=(DefaultTableModel) jTable1.getModel();
        JFileChooser jc=new JFileChooser("Documents");
        FileNameExtensionFilter fnef= new FileNameExtensionFilter("", ".xls","xlsx","xlsm");
        int i=jc.showSaveDialog(null);
        XSSFWorkbook excelwork=null;
        BufferedOutputStream bsout=null;
        if(i==JFileChooser.APPROVE_OPTION){
            FileOutputStream fout=null;
            
            
            try {
                 excelwork=new  XSSFWorkbook();
                XSSFSheet sh=excelwork.createSheet("Jtable");
                for (int j = 0; j < dm.getRowCount(); j++) {
                    XSSFRow row=sh.createRow(j);
                    for (int k = 0; k < dm.getColumnCount(); k++) {
                        XSSFCell cell=row.createCell(k);
                        cell.setCellValue(dm.getValueAt(j, k).toString());
                    }
                }   fout = new FileOutputStream(jc.getSelectedFile()+".xlsx");
                bsout=new BufferedOutputStream(fout);
                excelwork.write(bsout);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Report.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Report.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if(bsout!=null)
                        bsout.close();
                    
                    if(fout!=null)
                    fout.close();
                } catch (IOException ex) {
                    Logger.getLogger(Report.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_ExcelExportActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:        
        int i;
        List<Book> ls=new ArrayList<>();
        Date date1;
        Date date2;
        dm=(DefaultTableModel) jTable1.getModel();
       if(Criteria.getSelectedItem().toString().equalsIgnoreCase("category")){
           ls=new Controller().findBc(bookCombo.getSelectedItem().toString());
            for (Iterator<Book> iterator = ls.iterator(); iterator.hasNext();) {
                Book next = iterator.next();
                dm.addRow(new Object[]{
                next.getBookid(),next.getTitle(),next.getAuthor(),
                    next.getDateOfPublication()
                });
                
            }        
       
       
       }else{
           date1=new Date(fromDate.getDate().getTime());
           date2= new Date(Todate.getDate().getTime());
           String datee=date1.toString();
           String datee2=date2.toString();
dm.setRowCount(0);
           List<Object[]> m=new Controller().report(datee, datee2);
           for (Object[] objects : m) {
               dm.addRow(objects);
           }
              
       }
        
    }//GEN-LAST:event_SearchActionPerformed

    private void PDFExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PDFExportActionPerformed
        // TODO add your handling code here:
        MessageFormat header=new MessageFormat("list");
        MessageFormat footer=new MessageFormat("page{0,number,integer}");
        try{
        jTable1.print(JTable.PrintMode.NORMAL, header, footer);
        
        
        }catch(PrinterException ie){
            JOptionPane.showMessageDialog(null, "crap");
        }
    }//GEN-LAST:event_PDFExportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Criteria;
    private javax.swing.JButton ExcelExport;
    private javax.swing.JLabel From;
    private javax.swing.JButton PDFExport;
    private javax.swing.JButton Print;
    private javax.swing.JButton Search;
    private javax.swing.JLabel To;
    private com.toedter.calendar.JDateChooser Todate;
    private javax.swing.JComboBox<String> bookCombo;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser fromDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
